//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Cer_AddendasEntities : DbContext
    {
        public Cer_AddendasEntities()
            : base("name=Cer_AddendasEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C__EFMigrationsHistory> C__EFMigrationsHistory { get; set; }
        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<Addenda> Addendas { get; set; }
        public virtual DbSet<addendasAndre> addendasAndres { get; set; }
        public virtual DbSet<AspNetRole> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
        public virtual DbSet<document_type> document_type { get; set; }
    
        public virtual int AddendaAdd(string nombreAddenda, string xML, string usuario)
        {
            var nombreAddendaParameter = nombreAddenda != null ?
                new ObjectParameter("NombreAddenda", nombreAddenda) :
                new ObjectParameter("NombreAddenda", typeof(string));
    
            var xMLParameter = xML != null ?
                new ObjectParameter("XML", xML) :
                new ObjectParameter("XML", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddendaAdd", nombreAddendaParameter, xMLParameter, usuarioParameter);
        }
    
        public virtual int AddendaDelete(Nullable<int> idAddenda)
        {
            var idAddendaParameter = idAddenda.HasValue ?
                new ObjectParameter("IdAddenda", idAddenda) :
                new ObjectParameter("IdAddenda", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddendaDelete", idAddendaParameter);
        }
    
        public virtual ObjectResult<AddendaGetAll_Result> AddendaGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AddendaGetAll_Result>("AddendaGetAll");
        }
    
        public virtual ObjectResult<AddendaGetById_Result> AddendaGetById(Nullable<int> idAddenda)
        {
            var idAddendaParameter = idAddenda.HasValue ?
                new ObjectParameter("IdAddenda", idAddenda) :
                new ObjectParameter("IdAddenda", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AddendaGetById_Result>("AddendaGetById", idAddendaParameter);
        }
    
        public virtual int AddendaUpdate(Nullable<int> idAddenda, string nombreAddenda, string xML, string usuario)
        {
            var idAddendaParameter = idAddenda.HasValue ?
                new ObjectParameter("IdAddenda", idAddenda) :
                new ObjectParameter("IdAddenda", typeof(int));
    
            var nombreAddendaParameter = nombreAddenda != null ?
                new ObjectParameter("NombreAddenda", nombreAddenda) :
                new ObjectParameter("NombreAddenda", typeof(string));
    
            var xMLParameter = xML != null ?
                new ObjectParameter("XML", xML) :
                new ObjectParameter("XML", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddendaUpdate", idAddendaParameter, nombreAddendaParameter, xMLParameter, usuarioParameter);
        }
    
        public virtual ObjectResult<addendaGetAll1_Result> addendaGetAll1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<addendaGetAll1_Result>("addendaGetAll1");
        }
    }
}
